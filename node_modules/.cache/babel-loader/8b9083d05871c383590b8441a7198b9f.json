{"ast":null,"code":"var _jsxFileName = \"/home/gah1289/springboard_assignments/41-react-router-and-react-history/react-jokes-classes/src/JokeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.numJokesToGet = 10;\n    this.state = {\n      jokes: []\n    };\n\n    // this.generateNewJokes = this.generateNewJokes.bind(this);\n    // this.resetVotes = this.resetVotes.bind(this);\n    // this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n  // state = {\n  // \tjokes : []\n  // };\n\n  async componentDidMount() {\n    let j = [...this.state.jokes];\n    while (j.length < this.numJokesToGet) {\n      console.log('fetching');\n      let res = await axios.get('https://icanhazdadjoke.com', {\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      let {\n        status,\n        ...jokeObj\n      } = res.data;\n      // console.log(status, jokeObj);\n      j.push(jokeObj);\n      this.setState({\n        jokes: [...j]\n      });\n    }\n    // console.log(this.state.jokes, j.length);\n  }\n\n  vote(id, delta) {\n    setJokes(allJokes => allJokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n  generateNewJokes() {\n    setJokes([]);\n  }\n\n  // if(jokes) {\n  // \tlet sortedJokes = [\n  // \t\t...jokes\n  // \t].sort((a, b) => b.votes - a.votes)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: this.state.jokes.map(joke => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Joke, {\n          text: joke.joke,\n          id: joke.id,\n          votes: joke.votes,\n          vote: this.vote\n          // locked={j.locked}\n          // toggleLock={this.toggleLock}\n        }, joke.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this);\n  }\n}\n// }\n\n// function JokeList({ numJokesToGet = 10 }) {\n// \tconst [\n// \t\tjokes,\n// \t\tsetJokes\n// \t] = useState([]);\n\n// \t/* get jokes if there are no jokes */\n\n// \tuseEffect(\n// \t\tfunction() {\n// \t\t\tasync function getJokes() {\n// \t\t\t\tlet j = [\n// \t\t\t\t\t...jokes\n// \t\t\t\t];\n// \t\t\t\tlet seenJokes = new Set();\n// \t\t\t\ttry {\n// \t\t\t\t\twhile (j.length < numJokesToGet) {\n// \t\t\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n// \t\t\t\t\t\t\theaders : { Accept: 'application/json' }\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tlet { status, ...jokeObj } = res.data;\n\n// \t\t\t\t\t\tif (!seenJokes.has(jokeObj.id)) {\n// \t\t\t\t\t\t\tseenJokes.add(jokeObj.id);\n// \t\t\t\t\t\t\tj.push({ ...jokeObj, votes: 0 });\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse {\n// \t\t\t\t\t\t\tconsole.error('duplicate found!');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t\tsetJokes(j);\n// \t\t\t\t} catch (e) {\n// \t\t\t\t\tconsole.log(e);\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tif (jokes.length === 0) getJokes();\n// \t\t},\n// \t\t[\n// \t\t\tjokes,\n// \t\t\tnumJokesToGet\n// \t\t]\n// \t);\n\n// \t/* empty joke list and then call getJokes */\n\n// \tfunction generateNewJokes() {\n// \t\tsetJokes([]);\n// \t}\n\n// \t/* change vote for this id by delta (+1 or -1) */\n\n// \tfunction vote(id, delta) {\n// \t\tsetJokes((allJokes) => allJokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j)));\n// \t}\n\n// \t/* render: either loading spinner or list of sorted jokes. */\n\n// \tif (jokes.length) {\n// \t\tlet sortedJokes = [\n// \t\t\t...jokes\n// \t\t].sort((a, b) => b.votes - a.votes);\n\n// \t\treturn (\n// \t\t\t<div className=\"JokeList\">\n// \t\t\t\t<button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n// \t\t\t\t\tGet New Jokes\n// \t\t\t\t</button>\n\n// \t\t\t\t{sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n\n// \treturn null;\n// }\n\nexport default JokeList;","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","JokeList","Component","constructor","props","numJokesToGet","state","jokes","vote","bind","componentDidMount","j","length","console","log","res","get","headers","Accept","status","jokeObj","data","push","setState","id","delta","setJokes","allJokes","map","votes","generateNewJokes","render","joke"],"sources":["/home/gah1289/springboard_assignments/41-react-router-and-react-history/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nclass JokeList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tjokes : []\n\t\t};\n\n\t\t// this.generateNewJokes = this.generateNewJokes.bind(this);\n\t\t// this.resetVotes = this.resetVotes.bind(this);\n\t\t// this.toggleLock = this.toggleLock.bind(this);\n\t\tthis.vote = this.vote.bind(this);\n\t}\n\tnumJokesToGet = 10;\n\n\t// state = {\n\t// \tjokes : []\n\t// };\n\n\tasync componentDidMount() {\n\t\tlet j = [\n\t\t\t...this.state.jokes\n\t\t];\n\t\twhile (j.length < this.numJokesToGet) {\n\t\t\tconsole.log('fetching');\n\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n\t\t\t\theaders : { Accept: 'application/json' }\n\t\t\t});\n\t\t\tlet { status, ...jokeObj } = res.data;\n\t\t\t// console.log(status, jokeObj);\n\t\t\tj.push(jokeObj);\n\n\t\t\tthis.setState({\n\t\t\t\tjokes : [\n\t\t\t\t\t...j\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\t// console.log(this.state.jokes, j.length);\n\t}\n\n\tvote(id, delta) {\n\t\tsetJokes((allJokes) => allJokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j)));\n\t}\n\n\tgenerateNewJokes() {\n\t\tsetJokes([]);\n\t}\n\n\t// if(jokes) {\n\t// \tlet sortedJokes = [\n\t// \t\t...jokes\n\t// \t].sort((a, b) => b.votes - a.votes)\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t{this.state.jokes.map((joke) => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Joke\n\t\t\t\t\t\t\ttext={joke.joke}\n\t\t\t\t\t\t\tkey={joke.id}\n\t\t\t\t\t\t\tid={joke.id}\n\t\t\t\t\t\t\tvotes={joke.votes}\n\t\t\t\t\t\t\tvote={this.vote}\n\t\t\t\t\t\t\t// locked={j.locked}\n\t\t\t\t\t\t\t// toggleLock={this.toggleLock}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t{/* <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n\t\t\t\t\tGet New Jokes\n\t\t\t\t</button> */}\n\t\t\t\t{/* {sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)} */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n// }\n\n// function JokeList({ numJokesToGet = 10 }) {\n// \tconst [\n// \t\tjokes,\n// \t\tsetJokes\n// \t] = useState([]);\n\n// \t/* get jokes if there are no jokes */\n\n// \tuseEffect(\n// \t\tfunction() {\n// \t\t\tasync function getJokes() {\n// \t\t\t\tlet j = [\n// \t\t\t\t\t...jokes\n// \t\t\t\t];\n// \t\t\t\tlet seenJokes = new Set();\n// \t\t\t\ttry {\n// \t\t\t\t\twhile (j.length < numJokesToGet) {\n// \t\t\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n// \t\t\t\t\t\t\theaders : { Accept: 'application/json' }\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tlet { status, ...jokeObj } = res.data;\n\n// \t\t\t\t\t\tif (!seenJokes.has(jokeObj.id)) {\n// \t\t\t\t\t\t\tseenJokes.add(jokeObj.id);\n// \t\t\t\t\t\t\tj.push({ ...jokeObj, votes: 0 });\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse {\n// \t\t\t\t\t\t\tconsole.error('duplicate found!');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t\tsetJokes(j);\n// \t\t\t\t} catch (e) {\n// \t\t\t\t\tconsole.log(e);\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tif (jokes.length === 0) getJokes();\n// \t\t},\n// \t\t[\n// \t\t\tjokes,\n// \t\t\tnumJokesToGet\n// \t\t]\n// \t);\n\n// \t/* empty joke list and then call getJokes */\n\n// \tfunction generateNewJokes() {\n// \t\tsetJokes([]);\n// \t}\n\n// \t/* change vote for this id by delta (+1 or -1) */\n\n// \tfunction vote(id, delta) {\n// \t\tsetJokes((allJokes) => allJokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j)));\n// \t}\n\n// \t/* render: either loading spinner or list of sorted jokes. */\n\n// \tif (jokes.length) {\n// \t\tlet sortedJokes = [\n// \t\t\t...jokes\n// \t\t].sort((a, b) => b.votes - a.votes);\n\n// \t\treturn (\n// \t\t\t<div className=\"JokeList\">\n// \t\t\t\t<button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n// \t\t\t\t\tGet New Jokes\n// \t\t\t\t</button>\n\n// \t\t\t\t{sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n\n// \treturn null;\n// }\n\nexport default JokeList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAAC;AAExB,MAAMC,QAAQ,SAASL,KAAK,CAACM,SAAS,CAAC;EACtCC,WAAW,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAAC,KAUdC,aAAa,GAAG,EAAE;IATjB,IAAI,CAACC,KAAK,GAAG;MACZC,KAAK,EAAG;IACT,CAAC;;IAED;IACA;IACA;IACA,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EACjC;EAGA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAG;IACzB,IAAIC,CAAC,GAAG,CACP,GAAG,IAAI,CAACL,KAAK,CAACC,KAAK,CACnB;IACD,OAAOI,CAAC,CAACC,MAAM,GAAG,IAAI,CAACP,aAAa,EAAE;MACrCQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAIC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,4BAA4B,EAAE;QACvDC,OAAO,EAAG;UAAEC,MAAM,EAAE;QAAmB;MACxC,CAAC,CAAC;MACF,IAAI;QAAEC,MAAM;QAAE,GAAGC;MAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;MACrC;MACAV,CAAC,CAACW,IAAI,CAACF,OAAO,CAAC;MAEf,IAAI,CAACG,QAAQ,CAAC;QACbhB,KAAK,EAAG,CACP,GAAGI,CAAC;MAEN,CAAC,CAAC;IACH;IACA;EACD;;EAEAH,IAAI,CAACgB,EAAE,EAAEC,KAAK,EAAE;IACfC,QAAQ,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,GAAG,CAAEjB,CAAC,IAAMA,CAAC,CAACa,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGb,CAAC;MAAEkB,KAAK,EAAElB,CAAC,CAACkB,KAAK,GAAGJ;IAAM,CAAC,GAAGd,CAAE,CAAC,CAAC;EAClG;EAEAmB,gBAAgB,GAAG;IAClBJ,QAAQ,CAAC,EAAE,CAAC;EACb;;EAEA;EACA;EACA;EACA;EACAK,MAAM,GAAG;IACR,oBACC;MAAK,SAAS,EAAC,UAAU;MAAA,UACvB,IAAI,CAACzB,KAAK,CAACC,KAAK,CAACqB,GAAG,CAAEI,IAAI,iBAC1B;QAAA,uBACC,QAAC,IAAI;UACJ,IAAI,EAAEA,IAAI,CAACA,IAAK;UAEhB,EAAE,EAAEA,IAAI,CAACR,EAAG;UACZ,KAAK,EAAEQ,IAAI,CAACH,KAAM;UAClB,IAAI,EAAE,IAAI,CAACrB;UACX;UACA;QAAA,GALKwB,IAAI,CAACR,EAAE;UAAA;UAAA;UAAA;QAAA;MAMX;QAAA;QAAA;QAAA;MAAA,QAEH;IAAC;MAAA;MAAA;MAAA;IAAA,QAKG;EAER;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAevB,QAAQ"},"metadata":{},"sourceType":"module"}