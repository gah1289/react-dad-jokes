{"ast":null,"code":"var _jsxFileName = \"/home/gah1289/springboard_assignments/41-react-router-and-react-history/react-jokes-classes/src/JokeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass JokeList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.numJokesToGet = 10;\n    this.state = {\n      jokes: []\n    };\n  }\n  async componentDidMount() {\n    let res = await axios.get('https://icanhazdadjoke.com', {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    let {\n      status,\n      ...jokeObj\n    } = res.data;\n    console.log(status, jokeObj);\n    this.setState({\n      jokes: [...this.state.jokes, jokeObj.joke]\n    });\n  }\n  // if(jokes) {\n  // \tlet sortedJokes = [\n  // \t\t...jokes\n  // \t].sort((a, b) => b.votes - a.votes)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [\"HI\", this.jokes.map(joke => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"joke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this);\n  }\n}\n// }\n\n// function JokeList({ numJokesToGet = 10 }) {\n// \tconst [\n// \t\tjokes,\n// \t\tsetJokes\n// \t] = useState([]);\n\n// \t/* get jokes if there are no jokes */\n\n// \tuseEffect(\n// \t\tfunction() {\n// \t\t\tasync function getJokes() {\n// \t\t\t\tlet j = [\n// \t\t\t\t\t...jokes\n// \t\t\t\t];\n// \t\t\t\tlet seenJokes = new Set();\n// \t\t\t\ttry {\n// \t\t\t\t\twhile (j.length < numJokesToGet) {\n// \t\t\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n// \t\t\t\t\t\t\theaders : { Accept: 'application/json' }\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tlet { status, ...jokeObj } = res.data;\n\n// \t\t\t\t\t\tif (!seenJokes.has(jokeObj.id)) {\n// \t\t\t\t\t\t\tseenJokes.add(jokeObj.id);\n// \t\t\t\t\t\t\tj.push({ ...jokeObj, votes: 0 });\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse {\n// \t\t\t\t\t\t\tconsole.error('duplicate found!');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t\tsetJokes(j);\n// \t\t\t\t} catch (e) {\n// \t\t\t\t\tconsole.log(e);\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tif (jokes.length === 0) getJokes();\n// \t\t},\n// \t\t[\n// \t\t\tjokes,\n// \t\t\tnumJokesToGet\n// \t\t]\n// \t);\n\n// \t/* empty joke list and then call getJokes */\n\n// \tfunction generateNewJokes() {\n// \t\tsetJokes([]);\n// \t}\n\n// \t/* change vote for this id by delta (+1 or -1) */\n\n// \tfunction vote(id, delta) {\n// \t\tsetJokes((allJokes) => allJokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j)));\n// \t}\n\n// \t/* render: either loading spinner or list of sorted jokes. */\n\n// \tif (jokes.length) {\n// \t\tlet sortedJokes = [\n// \t\t\t...jokes\n// \t\t].sort((a, b) => b.votes - a.votes);\n\n// \t\treturn (\n// \t\t\t<div className=\"JokeList\">\n// \t\t\t\t<button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n// \t\t\t\t\tGet New Jokes\n// \t\t\t\t</button>\n\n// \t\t\t\t{sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n\n// \treturn null;\n// }\n\nexport default JokeList;","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","JokeList","Component","numJokesToGet","state","jokes","componentDidMount","res","get","headers","Accept","status","jokeObj","data","console","log","setState","joke","render","map"],"sources":["/home/gah1289/springboard_assignments/41-react-router-and-react-history/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nclass JokeList extends React.Component {\n\tnumJokesToGet = 10;\n\tstate = {\n\t\tjokes : []\n\t};\n\n\tasync componentDidMount() {\n\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n\t\t\theaders : { Accept: 'application/json' }\n\t\t});\n\t\tlet { status, ...jokeObj } = res.data;\n\t\tconsole.log(status, jokeObj);\n\t\tthis.setState({\n\t\t\tjokes : [\n\t\t\t\t...this.state.jokes,\n\t\t\t\tjokeObj.joke\n\t\t\t]\n\t\t});\n\t}\n\t// if(jokes) {\n\t// \tlet sortedJokes = [\n\t// \t\t...jokes\n\t// \t].sort((a, b) => b.votes - a.votes)\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\tHI\n\t\t\t\t{this.jokes.map((joke) => <li>joke</li>)}\n\t\t\t\t{/* <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n\t\t\t\t\tGet New Jokes\n\t\t\t\t</button>\n\n\t\t\t\t{sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)} */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n// }\n\n// function JokeList({ numJokesToGet = 10 }) {\n// \tconst [\n// \t\tjokes,\n// \t\tsetJokes\n// \t] = useState([]);\n\n// \t/* get jokes if there are no jokes */\n\n// \tuseEffect(\n// \t\tfunction() {\n// \t\t\tasync function getJokes() {\n// \t\t\t\tlet j = [\n// \t\t\t\t\t...jokes\n// \t\t\t\t];\n// \t\t\t\tlet seenJokes = new Set();\n// \t\t\t\ttry {\n// \t\t\t\t\twhile (j.length < numJokesToGet) {\n// \t\t\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n// \t\t\t\t\t\t\theaders : { Accept: 'application/json' }\n// \t\t\t\t\t\t});\n// \t\t\t\t\t\tlet { status, ...jokeObj } = res.data;\n\n// \t\t\t\t\t\tif (!seenJokes.has(jokeObj.id)) {\n// \t\t\t\t\t\t\tseenJokes.add(jokeObj.id);\n// \t\t\t\t\t\t\tj.push({ ...jokeObj, votes: 0 });\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\telse {\n// \t\t\t\t\t\t\tconsole.error('duplicate found!');\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t\tsetJokes(j);\n// \t\t\t\t} catch (e) {\n// \t\t\t\t\tconsole.log(e);\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tif (jokes.length === 0) getJokes();\n// \t\t},\n// \t\t[\n// \t\t\tjokes,\n// \t\t\tnumJokesToGet\n// \t\t]\n// \t);\n\n// \t/* empty joke list and then call getJokes */\n\n// \tfunction generateNewJokes() {\n// \t\tsetJokes([]);\n// \t}\n\n// \t/* change vote for this id by delta (+1 or -1) */\n\n// \tfunction vote(id, delta) {\n// \t\tsetJokes((allJokes) => allJokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j)));\n// \t}\n\n// \t/* render: either loading spinner or list of sorted jokes. */\n\n// \tif (jokes.length) {\n// \t\tlet sortedJokes = [\n// \t\t\t...jokes\n// \t\t].sort((a, b) => b.votes - a.votes);\n\n// \t\treturn (\n// \t\t\t<div className=\"JokeList\">\n// \t\t\t\t<button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n// \t\t\t\t\tGet New Jokes\n// \t\t\t\t</button>\n\n// \t\t\t\t{sortedJokes.map((j) => <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n\n// \treturn null;\n// }\n\nexport default JokeList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAAC;AAExB,MAAMC,QAAQ,SAASL,KAAK,CAACM,SAAS,CAAC;EAAA;IAAA;IAAA,KACtCC,aAAa,GAAG,EAAE;IAAA,KAClBC,KAAK,GAAG;MACPC,KAAK,EAAG;IACT,CAAC;EAAA;EAED,MAAMC,iBAAiB,GAAG;IACzB,IAAIC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4BAA4B,EAAE;MACvDC,OAAO,EAAG;QAAEC,MAAM,EAAE;MAAmB;IACxC,CAAC,CAAC;IACF,IAAI;MAAEC,MAAM;MAAE,GAAGC;IAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;IACrCC,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEC,OAAO,CAAC;IAC5B,IAAI,CAACI,QAAQ,CAAC;MACbX,KAAK,EAAG,CACP,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK,EACnBO,OAAO,CAACK,IAAI;IAEd,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA;EACAC,MAAM,GAAG;IACR,oBACC;MAAK,SAAS,EAAC,UAAU;MAAA,iBAEvB,IAAI,CAACb,KAAK,CAACc,GAAG,CAAEF,IAAI,iBAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAMnC;EAER;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAehB,QAAQ"},"metadata":{},"sourceType":"module"}